# Laravel API Dockerfile - Optimized for Coolify with PostgreSQL

FROM php:8.4-fpm-alpine

# ----------------------
# Runtime dependencies
# ----------------------
RUN apk add --no-cache \
    bash \
    curl \
    git \
    unzip \
    zip \
    libpng \
    freetype \
    libjpeg-turbo \
    icu-libs \
    oniguruma \
    postgresql-client \
    supervisor \
    nginx

# ----------------------
# Build dependencies + PHP extensions
# ----------------------
RUN apk add --no-cache --virtual .build-deps \
    $PHPIZE_DEPS \
    libpng-dev \
    freetype-dev \
    libjpeg-turbo-dev \
    libzip-dev \
    icu-dev \
    oniguruma-dev \
    postgresql-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) \
    gd \
    zip \
    intl \
    mbstring \
    opcache \
    pcntl \
    bcmath \
    exif \
    pdo_pgsql \
    pgsql \
    && pecl install redis \
    && docker-php-ext-enable redis \
    && apk del .build-deps

# ----------------------
# Install Composer
# ----------------------
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# ----------------------
# PHP production config
# ----------------------
RUN echo 'memory_limit=512M' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini \
    && echo 'max_execution_time=300' >> /usr/local/etc/php/conf.d/docker-php-maxexectime.ini \
    && echo 'opcache.enable=1' >> /usr/local/etc/php/conf.d/opcache.ini \
    && echo 'opcache.memory_consumption=256' >> /usr/local/etc/php/conf.d/opcache.ini \
    && echo 'opcache.max_accelerated_files=20000' >> /usr/local/etc/php/conf.d/opcache.ini \
    && echo 'opcache.validate_timestamps=0' >> /usr/local/etc/php/conf.d/opcache.ini

# ----------------------
# Set working directory
# ----------------------
WORKDIR /var/www/html

# ----------------------
# Copy application
# ----------------------
COPY api/ .

# ----------------------
# Composer dependencies
# ----------------------
RUN composer install --no-dev --optimize-autoloader --no-interaction --no-progress --prefer-dist

# ----------------------
# Permissions
# ----------------------
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache

# ----------------------
# Supervisor + Nginx + start script
# ----------------------
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY docker/start.sh /start.sh
RUN chmod +x /start.sh

# ----------------------
# Expose HTTP port
# ----------------------
EXPOSE 80

# ----------------------
# Start everything via start.sh
# ----------------------
CMD ["/start.sh"]
